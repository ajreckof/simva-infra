version: '3.7'

services:
  whoami:
    image: containous/whoami
    hostname: "whoami.${SIMVA_INTERNAL_DOMAIN:-internal.test}"
    dns:
      - ${SIMVA_DNS_SERVICE_IP:-172.30.0.53}
    networks:
      default:
        aliases:
          - "whoami.${SIMVA_INTERNAL_DOMAIN:-internal.test}"
      traefik_services:
        aliases:
          - "whoami.${SIMVA_INTERNAL_DOMAIN:-internal.test}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.whoami.loadbalancer.server.port=80"
      - "traefik.http.routers.whoami.rule=Host(`whoami.${SIMVA_EXTERNAL_DOMAIN:-external.test}`)"

  traefik:
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host

  csp-reporter:
    image: node:12.18.2
    command: bash -c "cd /app && if [[ ! -d "node_modules" ]]; then npm install; fi && node ./index.js"
    stdin_open: true
    tty: true
    environment:
      DEBUG: "${SIMVA_DEBUG:-true}"
      NODE_ENV: "${SIMVA_ENVIRONMENT:-development}"
      PORT: "3003"
    volumes:
      - ${SIMVA_TLS_HOME?TLS home folder required}/ca:/var/lib/simva/ca
      - ${SIMVA_DATA_HOME:-/home/vagrant/docker-stacks/data}/traefik/csp-reporter:/app
    hostname: csp-reporter.${SIMVA_INTERNAL_DOMAIN:-internal.test}
    dns:
      - ${SIMVA_DNS_SERVICE_IP:-172.30.0.53}
    networks:
      default:
        aliases:
          - csp-reporter.${SIMVA_INTERNAL_DOMAIN:-internal.test}
      traefik_services:
        aliases:
          - csp-reporter.${SIMVA_INTERNAL_DOMAIN:-internal.test}
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.csp-reporter.loadbalancer.server.port=3003"
      - "traefik.http.routers.csp-reporter.rule=Host(`csp-reporter.${SIMVA_EXTERNAL_DOMAIN:-external.test}`)"