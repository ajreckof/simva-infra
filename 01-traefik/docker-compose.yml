version: '3.7'

networks:
  traefik_services:
    name: "${SERVICE_NETWORK:-traefik_services}"
    external: true

services:
  socket-proxy:
    image: tecnativa/docker-socket-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      LOG_LEVEL: "${SIMVA_SOCKET_PROXY_LOG_LEVEL:-info}"
      NETWORKS: 1
      #SERVICES: 1
      CONTAINERS: 1
      #SWARM: 1
      #TASKS: 1
    healthcheck:
      test: "wget --quiet --tries=1 --spider http://localhost:2375/_ping"
      interval: 60s
      timeout: 20s
      retries: 3
    restart: unless-stopped
    hostname: "socket-proxy.${SIMVA_INTERNAL_DOMAIN:-internal.test}"
    networks:
      default:
        aliases:
          - "socket-proxy.${SIMVA_INTERNAL_DOMAIN:-internal.test}"

  dns-proxy-server:
    image: eucm/dns-proxy-server:2.19.0-dh-2
    entrypoint:
      - '/bin/sh'
      - '-c'
      - |
        [ ! -d "/app/conf" ] && mkdir -p /app/conf;
        [ ! -f "/app/conf/config.json" ] && cat << EOF > /app/conf/config.json
        {
          "version": 2,
          "remoteDnsServers": [
            "8.8.8.8:53",
            "8.8.4.4:53"
          ],
          "envs": [
            {
              "name": "",
              "hostnames": [
                {
                  "id": 1562843575352085033,
                  "hostname": ".${SIMVA_EXTERNAL_DOMAIN:-external.test}",
                  "ip": "127.0.0.1",
                  "target": "traefik.${SIMVA_INTERNAL_DOMAIN:-internal.test}",
                  "ttl": 3600,
                  "type": "CNAME"
                }
              ]
            }
          ],
          "activeEnv": "",
          "webServerPort": 5380,
          "dnsServerPort": 53,
          "defaultDns": false,
          "logLevel": "INFO",
          "logFile": "console",
          "dpsNetwork": false,
          "dpsNetworkAutoConnect": false,
          "registerContainerNames": true,
          "hostMachineHostname": "host.docker.test",
          "domain": "docker.test"
        }
        EOF
        exec /usr/bin/docker-entrypoint "$$@"
    command:
      - "--"
      - "/app/dns-proxy-server"
    environment:
      MG_LOG_LEVEL: "${SIMVA_DNS_PROXY_SERVER_LOG_LEVEL:-INFO}"
      MG_DOCKER_HOST: "tcp://socket-proxy.${SIMVA_INTERNAL_DOMAIN:-internal.test}:2375"
      MG_DOCKER_API_VERSION: "v1.24"
    depends_on:
      - socket-proxy
# XXX Seems there is no binary to do the healthcheck
#    healthcheck:
#      test: "wget --quiet --tries=1 --spider http://localhost:5380/env/active"
#      interval: 60s
#      timeout: 20s
#      retries: 3
    restart: unless-stopped
    hostname: "dns.${SIMVA_INTERNAL_DOMAIN:-internal.test}"
    networks:
      default:
        aliases:
          - "dns.${SIMVA_INTERNAL_DOMAIN:-internal.test}"
      traefik_services:
        ipv4_address: "${SIMVA_DNS_SERVICE_IP:-172.30.0.53}"
        aliases:
          - "dns.${SIMVA_INTERNAL_DOMAIN:-internal.test}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.dns.loadbalancer.server.port=5380"
      - "traefik.http.routers.dns.rule=Host(`dns.${SIMVA_EXTERNAL_DOMAIN:-external.test}`)"
      - "traefik.http.routers.dns.entrypoints=websecure"
      - "traefik.http.routers.dns.tls=true"

  traefik:
    image: traefik:2.2.1
    entrypoint:
      - '/bin/sh'
      - '-c'
      - |
        mkdir -p /etc/traefik/conf/dynamic-config;
        cat << EOF > /etc/traefik/conf/dynamic-config/file-provider.toml
        [[tls.certificates]]
          certFile = "/etc/traefik/ssl/traefik-fullchain.pem"
          keyFile = "/etc/traefik/ssl/traefik-key.pem"
          stores = ["default"]

        [tls.stores]
          [tls.stores.default]
            [tls.stores.default.defaultCertificate]
              certFile = "/etc/traefik/ssl/traefik-fullchain.pem"
              keyFile  = "/etc/traefik/ssl/traefik-key.pem"

        [tls.options]
          [tls.options.default]
            minVersion = "VersionTLS12"
          [tls.options.myTLSOptions]
            minVersion = "VersionTLS13"

        [http.middlewares]
          [http.middlewares.dashboardAuth.basicAuth]
            # admin:password
            users = [
              "${SIMVA_TRAEFIK_DASHBOARD_USER:?Traefik dashboard username must be configured}:${SIMVA_TRAEFIK_DASHBOARD_PASSWORD:?Traefik's dashboard password must be configured}"
            ]
          [http.middlewares.redirect-to-https.redirectScheme]
            scheme = "https"
            permanent = true
        EOF
        exec /entrypoint.sh "$$@"
    command:
      - "--"
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls=true
      - --entryPoints.ping.address=:8082
      - --ping=true
      - --ping.entryPoint=ping
      - --global.checkNewVersion=false
      - --global.sendAnonymousUsage=false
      - --serversTransport.insecureSkipVerify=${SIMVA_TRAEFIK_INSECURE_SKIP_VERIFY:-false}
      - --serverstransport.rootcas=${SIMVA_SSL_ROOT_CAS:-/home/vagrant/docker-stacks/config/tls/rootCA.pem}
      - --api.dashboard=true
      - --providers.file.directory=/etc/traefik/conf/dynamic-config
      - --providers.file.watch=true
      - --providers.docker=true
      - --providers.docker.exposedByDefault=false
      - --providers.docker.endpoint=tcp://socket-proxy.${SIMVA_INTERNAL_DOMAIN:-internal.test}:2375
      - --providers.docker.network=traefik_services
      - --providers.docker.watch=true
      - --providers.docker.defaultRule=Host(`{{ .Name }}.${SIMVA_EXTERNAL_DOMAIN:-external.test}`)
      - --log.level=${SIMVA_TRAEFIK_LOG_LEVEL:-INFO}
      - --log.format=json
    volumes:
      - "${SIMVA_TLS_HOME:?TLS home folder required}:/etc/traefik/ssl:ro"
    depends_on:
      - socket-proxy
      - dns-proxy-server
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    healthcheck:
      test: "traefik healthcheck --entryPoints.ping.address=:8082 --ping.entryPoint=ping --ping"
      interval: 10s
      timeout: 20s
      retries: 3
    restart: unless-stopped
    hostname: "traefik.${SIMVA_INTERNAL_DOMAIN:-internal.test}"
    networks:
      default:
        aliases:
          - "traefik.${SIMVA_INTERNAL_DOMAIN:-internal.test}"
      traefik_services:
        aliases:
          - "traefik.${SIMVA_INTERNAL_DOMAIN:-internal.test}"
    labels:
      - "dps.network=${SERVICE_NETWORK:-traefik_services}"
      - "traefik.enable=true"
      # Global redirect http to https
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https@file"
      # Access API enpoint through traefik itself
      - "traefik.http.services.api.loadbalancer.server.port=8080"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.${SIMVA_EXTERNAL_DOMAIN:-external.test}`)"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.options=myTLSOptions@file"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=dashboardAuth@file"